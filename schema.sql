/** 
* Shops
*/
create table shops (
  -- Shop ID auto generated.
  id bigint generated by default as identity primary key,
  -- The shops's name, meant to be displayable to the customer..
  shop_name text not null,
  -- The shop's description
  description text,
    -- The shop's logo
  logo text,
    -- The shop's image url
  image text,
    -- The shop's custom domain
  custom_domain text unique,
    -- The shop's subdomain
  subdomain text unique,
  -- User the product belongs to.
  user_id uuid references auth.users not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);
alter table shops enable row level security;
create policy "Can create shop." on shops for insert with check (auth.uid() = user_id);
create policy "Can view own shop data." on shops for select using (auth.uid() = user_id);
create policy "Can update own shop data." on shops for update using (auth.uid() = user_id);
create policy "Can delete own shop." on shops for delete using (auth.uid() = user_id);

/** 
* PRODUCTS
*/
create table products (
  -- Product ID auto generated.
  id bigint generated by default as identity primary key,
  -- Whether the product is currently available for purchase.
  active boolean,
  -- Product price
  price float not null,
  -- The product's name, meant to be displayable to the customer..
  product_name text not null,
  -- The product's description, meant to be displayable to the customer.
  description text not null,
  -- Set of key-value pairs, used to store additional information about the object in a structured format.
  metadata jsonb,
    -- Extra details in html text format using rich text editor 
  details text,
  -- Shop the product belongs to.
  shop_id bigint references public.shops not null,
  -- User the product belongs to.
  user_id uuid references auth.users not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);
alter table products enable row level security;
create policy "Can create product." on products for insert with check (auth.uid() = user_id);
create policy "Can view own product data." on products for select using (auth.uid() = user_id);
create policy "Can update own product data." on products for update using (auth.uid() = user_id);
create policy "Can delete own product." on products for delete using (auth.uid() = user_id);

/** 
* PRODUCT Images
*/
create table product_images (
  -- Product image ID auto generated.
  id bigint generated by default as identity primary key,
  -- The product images url.
  image_url text not null,
  -- The images alt text.
  alt_text text,
  -- The images order when it is displayed with other images for the same product.
  position int,
  -- Product the image belongs to.
  product_id bigint references public.products not null,
  created_at timestamp with time zone default timezone('utc'::text, now()) not null,
  updated_at timestamp with time zone default timezone('utc'::text, now()) not null
);
alter table products enable row level security;
create policy "Can add product images." on products for insert to authenticated with check (true);
create policy "Can view product images" on products for select using (true);
create policy "Can update own product images." on products for update using (auth.uid() = user_id);
create policy "Can delete own product images." on products for delete using (auth.uid() = user_id);